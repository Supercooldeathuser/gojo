-- gojo
local player = game.Players.LocalPlayer
local char = player.Character
local Humanoid = char.Humanoid
local hot = player.PlayerGui:WaitForChild("Hotbar")
local hotbar = hot:WaitForChild("Backpack"):WaitForChild("Hotbar")
-- 14516273501

local function cloneToolName(slot, text)
    local toolName = slot.ToolName
    if not slot:FindFirstChild("SkibidiGame") then
        toolName.Visible = false
        local clone = toolName:Clone()
        clone.Name = "SkibidiGame"
        clone.Parent = slot
        clone.Text = text
        clone.Visible = true
    elseif slot:FindFirstChild("SkibidiGame") then
        if slot:FindFirstChild("SkibidiGame").Text ~= text then
            toolName.Visible = false
            slot:FindFirstChild("SkibidiGame").Text = text
        end
    end
end
-- 10470104242
local magichealth = player.PlayerGui:WaitForChild("ScreenGui"):WaitForChild("MagicHealth")
local UltLabel = player.PlayerGui:WaitForChild("ScreenGui"):WaitForChild("MagicHealth"):WaitForChild("TextLabel")
UltLabel.Visible = false
local UltLabel = UltLabel:Clone()
UltLabel.Visible = true
UltLabel.Name = "SkibidiRizzlerGyattOhio"
UltLabel.Parent = magichealth
task.spawn(function()
    while true do
        UltLabel.Text = "The Strongest"
        for _, slot in ipairs(hotbar:GetChildren()) do
            if slot:FindFirstChild("Base") and slot.Base:FindFirstChild("ToolName") then
                local toolNameText = slot.Base.ToolName.Text
                if toolNameText == "Normal Punch" then
                    cloneToolName(slot.Base, "repulting arts")
                elseif toolNameText == "Consecutive Punches" then
                    cloneToolName(slot.Base, "atracted punches")
                elseif toolNameText == "Shove" then
                    cloneToolName(slot.Base, "sinfyny arts")
                elseif toolNameText == "Uppercut" then
                    cloneToolName(slot.Base, "airial dropkick")
                elseif toolNameText == "Death Counter" then
                    cloneToolName(slot.Base, "infinet void counter")
                elseif toolNameText == "Table Flip" then
                    cloneToolName(slot.Base, "max blue")
                elseif toolNameText == "Serious Punch" then
                    cloneToolName(slot.Base, "real purple")
                elseif toolNameText == "Omni Directional Punch" then
                    cloneToolName(slot.Base, "atract")
                end
            end
        end
        task.wait(1)
    end
end)

-- Create a ScreenGui
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "WatermarkGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create a TextLabel for the watermark
local watermarkLabel = Instance.new("TextLabel")
watermarkLabel.Name = "WatermarkLabel"
watermarkLabel.Text = "the strongest by beluganiki on discord version 1"  -- Customize your watermark text here
watermarkLabel.Font = Enum.Font.SourceSans
watermarkLabel.TextSize = 24  -- Set the size of the text
watermarkLabel.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White color
watermarkLabel.BackgroundTransparency = 1  -- Make the background transparent
watermarkLabel.Position = UDim2.new(0.5, 0, 0, 10)  -- Position it at the top center
watermarkLabel.AnchorPoint = Vector2.new(0.5, 0)  -- Center the anchor point horizontally
watermarkLabel.Parent = screenGui

-- Optional: Make the watermark slightly transparent
watermarkLabel.TextTransparency = 0.3  -- Adjust transparency if needed



--[[Animations]]

--[[Move 1]]
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local animationId = 10468665991  -- ID of the animation to check for

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Create ScreenGui and Frame for red flash effect
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
local redFrame = Instance.new("Frame", screenGui)
redFrame.Size = UDim2.new(1, 0, 1, 0)  -- Full screen
redFrame.BackgroundColor3 = Color3.new(1, 0, 0)  -- Red color
redFrame.BackgroundTransparency = 1  -- Fully transparent initially

local function flashRedAround()
    redFrame.BackgroundTransparency = 0.5  -- Set to semi-transparent
    for _, corner in pairs({Vector2.new(0, 0), Vector2.new(1, 0), Vector2.new(0, 1), Vector2.new(1, 1)}) do
        redFrame.Position = UDim2.new(corner.X, 0, corner.Y, 0)  -- Move to the corner
        wait(0.5)  -- Wait time for each corner flash
    end
    redFrame.BackgroundTransparency = 1  -- Hide it again
end

local function onAnimationPlayed(animationTrack)
    -- Check if the played animation matches the specified ID
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop any currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Load and play a new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://12618271998"
        local Anim = humanoid:LoadAnimation(AnimAnim)
        Anim:Play()
        Anim:AdjustSpeed(1)

        -- Create a red ball (Part)
        local redBall = Instance.new("Part")
        redBall.Size = Vector3.new(0.5, 0.5, 0.5)  -- Smaller size of the ball
        redBall.Color = Color3.new(1, 0, 0)  -- Red color
        redBall.Shape = Enum.PartType.Ball  -- Make it a ball
        redBall.Material = Enum.Material.Neon  -- Optional: gives it a glowing effect
        redBall.Anchored = false  -- Make sure it's not anchored to allow movement
        redBall.Parent = workspace  -- Add the ball to the game world

        -- Position the ball inside the character's hand
        local hand = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")

        if hand then
            -- Position the ball inside the hand
            redBall.Position = hand.Position + hand.CFrame.LookVector * 0.5 + Vector3.new(0, -0.5, 0)  -- Adjusted to go inside the hand

            -- Function to update the ball's position independently
            local function updateBallPosition()
                redBall.Position = hand.Position + hand.CFrame.LookVector * 0.5 + Vector3.new(0, -0.5, -1.5)  -- Always inside the hand
            end

            -- Connect the update function to the Heartbeat event
            local heartbeatConnection = RunService.Heartbeat:Connect(updateBallPosition)

            -- Flash red around the screen (execute independently)
            flashRedAround()

            -- Wait a very short time before removing the ball
            wait(0.01)  -- Very short wait time for removing the ball (fastest possible)
            redBall:Destroy()  -- Remove the red ball from the workspace
            
            -- Clean up the connection
            heartbeatConnection:Disconnect()
        end
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 1 ANIM]]

--[[Move 2]]
-- Define the animation ID to check for
local animationId = 10466974800

-- Get the local player
local player = game.Players.LocalPlayer

-- Wait for the player's character to load
local character = player.Character or player.CharacterAdded:Wait()

-- Get the humanoid object from the character
local humanoid = character:WaitForChild("Humanoid")

-- Function to handle when any animation is played
local function onAnimationPlayed(animationTrack)
    -- Check if the animation ID matches the one you're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop all currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create a new animation object with the new animation ID
        local newAnimation = Instance.new("Animation")
        newAnimation.AnimationId = "rbxassetid://13560306510"

        -- Load the animation into the humanoid
        local newAnimTrack = humanoid:LoadAnimation(newAnimation)

        -- Optional: Adjust the animation speed and start time
        local startTime = 0
        newAnimTrack:Play()
        newAnimTrack:AdjustSpeed(3)
        newAnimTrack.TimePosition = startTime

        -- Add particle effect
        local particleEmitter = Instance.new("ParticleEmitter")
        particleEmitter.Texture = "rbxassetid://1234567890"  -- Replace with your particle texture ID
        particleEmitter.Parent = character.Head  -- Attach to the player's head (or any other part)
        particleEmitter.Rate = 50  -- Number of particles per second
        particleEmitter.Lifetime = NumberRange.new(1, 2)  -- How long particles last
        particleEmitter.Speed = NumberRange.new(5, 10)  -- Speed of the particles
        particleEmitter:Emit(100)  -- Emit 100 particles once

        -- Add sound effect
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://7147847068"  -- Replace with your sound ID
        sound.Volume = 1
        sound.PlayOnRemove = true
        sound.Parent = character.Head  -- Attach the sound to the player's head (or another part)
        sound:Play()
    end
end

-- Connect the function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 2 ANIM]]

--[[Move 3]]


local Players = game:GetService("Players")

-- Animation ID that triggers the random animations
local animationId = 10471336737

-- List of additional animation IDs to play randomly
local randomAnimationIds = {
    "rbxassetid://17889471098",   -- Random Animation 1
    "rbxassetid://15124762088", -- Add your other animation IDs here
    "rbxassetid://13073745835", -- Example: replace with actual IDs
    "rbxassetid://15290930205",
     "rbxassetid://15145462680",
}

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Function to play a random animation from the list
local function playRandomAnimation()
    -- Stop all currently playing animations
    for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
        animTrack:Stop()
    end

    -- Select a random animation ID from the list
    local randomIndex = math.random(1, #randomAnimationIds)
    local randomAnimationId = randomAnimationIds[randomIndex]

    -- Load and play the selected random animation
    local animInstance = Instance.new("Animation")
    animInstance.AnimationId = randomAnimationId
    local animTrack = humanoid:LoadAnimation(animInstance)
    animTrack:Play()
    animTrack:AdjustSpeed(1)
end

-- Function called when an animation is played
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        playRandomAnimation() -- Call to play a random animation
    end
end

-- Connect the AnimationPlayed event to the function
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--[[END OF MOVE 3 ANIM]]

--[[Move 4]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12510170988


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18182425133"

local Anim = Humanoid:LoadAnimation(AnimAnim)




local startTime = 2


Anim:Play()

Anim:AdjustSpeed(2)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2)


    end

end

--[[END OF MOVE 4 ANIM]]

--[[Wall combo]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18903642853"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(2)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2)


    end

end

--[[END OF WALL COMBO ANIM]]

--[[Ult Activation]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12447707844


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18182400897"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0.7)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)

    end

end
--[[END OF ULT ACTIVATION ANIM]]


--[[ULT MOVE 2 ANIM]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 18715884857


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://18715884857" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15125307874"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


delay(1.8, function()

    Anim:Stop()

end)


    end

end





--[[Dash]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15676072469"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(1.5)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)


delay(1.8, function()

    Anim:Stop()

end)


    end

end


--[[END OF DASH ANIM]]

--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15121659862"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(5)

Anim.TimePosition = startTime

Anim:AdjustSpeed(5)


    end

end

--[[END OF UPPERCUT ANIM]]

--[[Downslam]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18897119503"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0




Anim:Play()

Anim:AdjustSpeed(2)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2)


    end

end

--[[END OF DOWNSLAM ANIM]]

--[[Punch anims]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local animationIdsToStop = {

    [17859015788] = true, --punch idk

    [10469493270] = true, --punch1

    [10469630950] = true, --punch2

    [10469639222] = true, --punch3

    [10469643643] = true, --punch4

}


local replacementAnimations = {

    ["10469493270"] = "rbxassetid://17889458563", --punch1

    ["10469630950"] = "rbxassetid://17889461810", --punch2

    ["10469639222"] = "rbxassetid://17889471098", --punch3

    ["10469643643"] = "rbxassetid://17889461810", --punch4

    ["17859015788"] = "rbxassetid://12684185971", --punch idk

    ["11365563255"] = "rbxassetid://14516273501" --punch idk

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")




character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end) 


-- b64 decode
local function decodeBase64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f = '',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local enabled = false
local userInputService = game:GetService("UserInputService")
local teleported = false
local cooldown = false
 

-- Start checking for animation
spawn(checkAnimation)

-- Function to toggle enabled state
local function onKeyPress(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.T and not gameProcessedEvent then
        enabled = not enabled
        if enabled then
            print("Enabled")
        else
            print("Disabled")
        end
    end
end

-- Connect the input event
userInputService.InputBegan:Connect(onKeyPress)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local userInputService = game:GetService("UserInputService")
local cooldown = false

-- Function to create billboard text
local function createBillboardText(text)
    -- Create billboard text
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Parent = character:WaitForChild("Head")
    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboardGui
    textLabel.TextColor3 = Color3.new(1, 1, 1) -- White
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextSize = 24
    textLabel.Text = ""

    -- Type out the text
    local typeSpeed = 0.1
    for i = 1, #text do
        textLabel.Text = text:sub(1, i)
        wait(typeSpeed)
    end

    -- Make the text disappear
    wait(1)
    billboardGui:Destroy()
end

-- Function to check for input
local function onKeyPress(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.G and not gameProcessedEvent and not cooldown then
        cooldown = true

        -- Choose a random text
        local texts = {}
        local text = texts[math.random(1, #texts)]

        -- Create the billboard text
        spawn(function()
            createBillboardText(text)
        end)

        -- Cooldown for 2 seconds
        wait(2)
        cooldown = false
    end
end

-- Connect the input event
userInputService.InputBegan:Connect(onKeyPress)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local userInputService = game:GetService("UserInputService")

-- Function to create billboard text
local function createBillboardText(text)
    -- Create billboard text
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Parent = character:WaitForChild("Head")
    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboardGui
    textLabel.TextColor3 = Color3.new(1, 1, 1) -- White
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextSize = 24
    textLabel.Text = ""

    -- Type out the text
    local typeSpeed = 0.1
    for i = 1, #text do
        textLabel.Text = text:sub(1, i)
        wait(typeSpeed)
    end

    -- Make the text disappear
    wait(1)
    billboardGui:Destroy()
end

-- Function to check for input
local function onKeyPress(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.G and not gameProcessedEvent then
        -- Choose a random text
        local texts = {"I won't hold back this time.", "I am the one who killed Satoru Gojo.", "Dont get ahead of yourself.","You wont escape this time."}
        local text = texts[math.random(1, #texts)]

        -- Create the billboard text
        spawn(function()
            createBillboardText(text)
        end)
    end
end

-- Connect the input event
userInputService.InputBegan:Connect(onKeyPress)

local assetId = 89029062881053 -- Replace with the actual Asset ID
local soundId = "rbxassetid://18169340129" -- Replace with the actual Sound ID

local effect = game:GetObjects("rbxassetid://" .. assetId)[1]
local sound = Instance.new("Sound") -- Create a new Sound instance

if effect and sound then
    sound.SoundId = soundId -- Set the SoundId property to the asset ID
    sound.Parent = game.Workspace -- Parent it to Workspace or any other service

    local player = game.Players.LocalPlayer
    local character = player and player.Character
    local rightHand = character and (character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")) -- Adjust for R6 or R15

    local userInputService = game:GetService("UserInputService")
    local cooldown = false

    local function enableEffect()
        if not cooldown and rightHand then
            cooldown = true

            local effectClone = effect:Clone()
            effectClone.Parent = rightHand

            -- Adjust CFrame to position effect at the end of the hand
            -- For R15, "RightHand" might be used; for R6, you might need to adjust it further
            effectClone.CFrame = rightHand.CFrame * CFrame.new(0, -rightHand.Size.Y/3, 0) -- Adjust the offset if necessary

            -- Create a weld to keep the effect attached
            local weld = Instance.new("Weld")
            weld.Part0 = rightHand
            weld.Part1 = effectClone
            weld.C0 = CFrame.new(0, -rightHand.Size.Y/28, -0.75) -- Adjust the offset if necessary
            weld.Parent = rightHand

            -- Play the sound
            sound:Play()

            -- Wait for 10 seconds
            wait(0.9)

            -- Cleanup
            effectClone:Destroy()
            weld:Destroy()

            -- Reset cooldown
            wait(10)
            cooldown = false
        end
    end

    userInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.One then
            enableEffect()
        end
    end)
else
    warn("Could not load effect or sound")
end

local player = game.Players.LocalPlayer
local character = player.Character
local humanoid = character:WaitForChild("Humanoid")

local function tiltCharacter()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoidRootPart.Anchored = true
    humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(-40), 0, 0)
    wait(1)
    humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(40), 0, 0)
    humanoidRootPart.Anchored = false
end

local function onDeath()
    -- Disable the tilt effect permanently
    game:GetService("UserInputService").InputBegan:Disconnect()
end

game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.One then
        tiltCharacter()
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(onDeath)
end)

local function onAnimation(id, func)
    local id = tostring(id):gsub("rbxassetid://", "")

    local char = game:GetService("Players").LocalPlayer.Character
    local humanoid = char and char:WaitForChild("Humanoid", 1)
    if char and humanoid then
        local connection = humanoid.AnimationPlayed:Connect(function(v)
            local vID = v.Animation.AnimationId:gsub("rbxassetid://", "")
            if id == vID then
                func(v)
            end
        end)
        game:GetService("Debris"):AddItem(connection, 1)
    end
    game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
        local humanoid = char and char:WaitForChild("Humanoid", 1)
        if char and humanoid then
            local connection = humanoid.AnimationPlayed:Connect(function(v)
                local vID = v.Animation.AnimationId:gsub("rbxassetid://", "")
                if id == vID then
                    func(v)
                end
            end)
            game:GetService("Debris"):AddItem(connection, 1)
        end
    end)
end

local function createCloneTrail()
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
        for i = 1, 10 do
            spawn(function()
                local clone = game.Players.LocalPlayer.Character:Clone()
                clone.Parent = workspace

                -- Remove nametags
                for _, descendant in pairs(clone:GetDescendants()) do
                    if descendant:IsA("BillboardGui") or descendant:IsA("TextLabel") then
                        descendant:Destroy()
                    end
                end

                -- Set all parts to have no collision
                for _, part in pairs(clone:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Anchored = true
                        part.CanCollide = false
                        part.Transparency = 0.5
                        part.CastShadow = false
                    end
                end

                -- Set the HumanoidRootPart to have no collision
                local humanoidRootPart = clone:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    humanoidRootPart.Anchored = true
                    humanoidRootPart.CanCollide = false
                    humanoidRootPart.Transparency = 0.5
                    humanoidRootPart.CastShadow = false
                end

                -- Remove the Humanoid
                local humanoid = clone:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid:Destroy()
                end

                local tweenService = game:GetService("TweenService")
                local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                for _, part in pairs(clone:GetDescendants()) do
                    if part:IsA("BasePart") then
                        local tween = tweenService:Create(part, tweenInfo, {Transparency = 1})
                        tween:Play()
                    end
                end

                game:GetService("Debris"):AddItem(clone, 2)
            end)
            wait(0.1)
        end
    end
end

local function onDeath()
    -- Disable the clone trail effect permanently
    for _, connection in pairs(getconnections(game.Players.LocalPlayer.Character.Humanoid.AnimationPlayed)) do
        connection:Disconnect()
    end
    game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
        char:WaitForChild("Humanoid").Died:Connect(function()
            -- Do nothing
        end)
    end)
    for _, id in pairs({"10479335397", "10480793962", "10480796021", "10491993682", "13365849295"}) do
        onAnimation(id, function(animation)
            -- Do nothing
        end)
    end
    game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
        char:WaitForChild("Humanoid").AnimationPlayed:Connect(function(animation)
            -- Do nothing
        end)
    end)
end

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(onDeath)
end)

onAnimation("10479335397", function(animation)
    createCloneTrail()
end)

onAnimation("10480793962", function(animation)
    createCloneTrail()
end)

onAnimation("10480796021", function(animation)
    createCloneTrail()
end)

onAnimation("10491993682", function(animation)
    createCloneTrail()
end)

onAnimation("13365849295", function(animation)
    createCloneTrail()
end)

local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
local watermarkLabel = Instance.new("TextLabel")

